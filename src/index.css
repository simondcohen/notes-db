@tailwind base;
@tailwind components;
@tailwind utilities;

.ProseMirror {
  @apply p-4;
}

.ProseMirror p.is-editor-empty:first-child::before {
  content: attr(data-placeholder);
  @apply text-gray-400 float-left h-0 pointer-events-none;
}

.ProseMirror:focus {
  @apply outline-none;
}

.ProseMirror > * + * {
  @apply mt-4;
}

.ProseMirror ul,
.ProseMirror ol {
  @apply pl-4;
}

.ProseMirror h1 {
  @apply text-2xl font-bold;
}

.ProseMirror h2 {
  @apply text-xl font-bold;
}

.ProseMirror code {
  @apply bg-gray-100 rounded px-1.5 py-0.5 text-sm;
}

/* Code block styling */
.ProseMirror pre {
  @apply bg-gray-900 rounded-md p-4 overflow-x-auto my-4 text-sm;
  font-family: 'Menlo', 'Monaco', 'Courier New', monospace;
}

.ProseMirror pre code {
  @apply bg-transparent p-0 text-gray-200;
  white-space: pre;
  font-family: inherit;
}

/* Make sure code blocks have enough contrast */
pre[data-language="json"] {
  @apply bg-gray-900 text-white;
}

/* Stronger highlighting for JSON syntax */
.hljs-attr,
.hljs-attribute {
  @apply text-yellow-300 font-semibold;
}

.hljs-string {
  @apply text-green-400;
}

.hljs-number,
.hljs-literal {
  @apply text-purple-400 font-semibold;
}

.hljs-punctuation {
  @apply text-gray-300;
}

.hljs-property {
  @apply text-blue-300 font-semibold;
}

.hljs-keyword {
  @apply text-red-400 font-semibold;
}

.ProseMirror blockquote {
  @apply border-l-4 border-gray-200 pl-4 italic;
}

.ProseMirror mark {
  @apply bg-yellow-200 px-0.5 rounded;
}